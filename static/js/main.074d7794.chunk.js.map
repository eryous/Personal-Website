{"version":3,"sources":["images/profilePic.jpg","components/NavBar.js","components/Experience.js","components/Education.js","components/Profile.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","React","Component","Experience","Container","Row","Col","profile","experiences","map","experience","i","key","Media","left","top","href","url","object","src","logo","alt","companyName","body","heading","roles","role","startDate","moment","timeEnd","currentJob","Date","endDate","link","title","className","format","location","description","Education","studies","study","institute","startYear","endYear","value","Profile","props","toggle","bind","state","activeTab","tab","this","setState","Jumbotron","class","profilePic","summary","Nav","tabs","NavItem","NavLink","classnames","active","onClick","TabContent","TabPane","tabId","Footer","icon","faTwitter","faLinkedin","faGithub","App","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.074d7794.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/profilePic.d3838395.jpg\";","import React from 'react';\nimport profilePic from \"../images/profilePic.jpg\"\nimport {Container, Collapse, Navbar, NavbarToggler, NavbarBrand, Nav, NavItem, NavLink } from 'reactstrap';\n\nclass NavBar extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.toggle = this.toggle.bind(this);\n    this.state = {\n      isOpen: false\n    };\n  }\n\n  toggle() {\n    this.setState({\n      isOpen: !this.state.isOpen\n    });\n  }\n\n  render() {\n    return (\n      <Navbar bg=\"primary\" variant=\"dark\" color=\"dark\" dark expand=\"lg\">\n        <Container>\n          <NavbarBrand href=\"/\">\n            <img src={profilePic} className=\"profile-pic\" alt=\"Oswaldo DÃ­az\"/>\n            <span>Youssef Errami</span>\n          </NavbarBrand>\n          <NavbarToggler onClick={this.toggle}/>\n          <Collapse isOpen={this.state.isOpen} navbar>\n            <Nav className=\"ml-auto\" navbar>\n              <NavItem>\n                <NavLink href=\"/profile/\">Profile</NavLink>\n              </NavItem>\n            </Nav>\n          </Collapse>\n        </Container>\n      </Navbar>\n    );\n  }\n}\n\nexport default NavBar;\n","import React from \"react\";\nimport { Container, Row, Col } from \"reactstrap\";\nimport profile from \"../profile\";\nimport moment from \"moment\";\nimport { Media } from \"reactstrap\";\n\nclass Experience extends React.Component {\n  render() {\n    return <Container>\n      <Row>\n        <Col>\n          {profile.experiences.map(function (experience, i) {\n            return (\n              <div key={i}>\n                <Media>\n                  <Media left top href={experience.url}>\n                    <Media object src={experience.logo} alt={experience.companyName}/>\n                  </Media>\n                  <Media body>\n                    <Media heading>\n                      <a href={experience.url}>{experience.companyName}</a>\n                    </Media>\n\n                    {experience.roles.map(function (role, i) {\n                      const startDate = moment(role.startDate);\n                      const timeEnd = moment(role.currentJob ? new Date() : new Date(role.endDate));\n                      return <div key={i}>\n                        <h5><a href={role.link}>{role.title}</a></h5>\n                        <span\n                          className=\"jobDuration\">{startDate.format('MMM YYYY')} - {role.currentJob ? 'Present' : timeEnd.format('MMM YYYY')}</span>\n                        <span className=\"jobLocation\">{role.location}</span>\n                        <p className=\"jobDescription\">{role.description}</p>\n                      </div>\n                    })}\n                  </Media>\n                </Media>\n              </div>\n            );\n          })}\n        </Col>\n      </Row>\n    </Container>\n  }\n}\n\nexport default Experience;\n","import React from 'react';\nimport {Container, Row, Col, Media} from 'reactstrap';\nimport moment from 'moment';\nimport profile from '../profile.json';\n\nclass Education extends React.Component {\n  render() {\n    return <Container>\n      <Row>\n        <Col>\n          {profile.studies.map(function (study, i) {\n            return <Media key={i}>\n              <Media left top href={study.url}>\n                <Media object src={study.logo} alt={study.institute}/>\n              </Media>\n              <Media body>\n                <Media heading>\n                  <a href={study.url}>{study.institute}</a>\n                </Media>\n                {\n                  [\n                    {\n                      \"key\": \"Title\",\n                      \"value\": study.title\n                    },\n                    {\n                      \"key\": \"Duration\",\n                      \"value\": study.startYear + \" - \" + study.endYear\n                    }\n                  ].map(function (object, i) {\n                    return <div>\n                      <Row>\n                        <Col className=\"formLabel\">{object.key}:</Col>\n                      </Row>\n                      <Row>\n                        <Col>{object.value}</Col>\n                      </Row>\n                    </div>\n                  })\n                }\n              </Media>\n            </Media>\n          })}\n        </Col>\n      </Row>\n    </Container>\n  }\n}\n\nexport default Education;\n","import React from 'react';\nimport {Jumbotron, Container, TabContent, TabPane, Nav, NavItem, NavLink } from \"reactstrap\";\nimport classnames from 'classnames';\nimport Experience from \"./Experience\";\nimport Education from './Education'\nimport profile from '../profile.json'\nimport profilePic from \"../images/profilePic.jpg\"\n\n\nclass Profile extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.toggle = this.toggle.bind(this);\n    this.state = {\n      activeTab: '1'\n    };\n  }\n\n  toggle(tab) {\n    if (this.state.activeTab !== tab) {\n      this.setState({\n        activeTab: tab\n      });\n    }\n  }\n\n  render() {\n    return <div>\n      <Jumbotron>\n        <div class=\"media\">\n          <img class=\"mr-3\" src={profilePic} className=\"profile-pic\"></img>\n          <div class=\"media-body\">\n            <h1 className=\"display-4\">{profile.title}</h1>\n            <p className=\"lead\">{profile.summary}</p>\n          </div>\n        </div>\n      </Jumbotron>\n\n      <Container>\n        <Nav tabs>\n          <NavItem>\n            <NavLink className={classnames({ active: this.state.activeTab === '1' })}\n                     onClick={() => { this.toggle('1'); }}>\n              Experience\n            </NavLink>\n          </NavItem>\n          <NavItem>\n            <NavLink className={classnames({ active: this.state.activeTab === '2' })}\n                     onClick={() => { this.toggle('2'); }}>\n              Education\n            </NavLink>\n          </NavItem>\n          <NavItem>\n            <NavLink className={classnames({ active: this.state.activeTab === '3' })}\n                     onClick={() => { this.toggle('3'); }}>\n              Personal Projects\n            </NavLink>\n          </NavItem>\n          <NavItem>\n            <NavLink className={classnames({ active: this.state.activeTab === '4' })}\n                     onClick={() => { this.toggle('4'); }}>\n              Languages and Technologies\n            </NavLink>\n          </NavItem>\n        </Nav>\n        <TabContent activeTab={this.state.activeTab}>\n          <TabPane tabId=\"1\">\n            <Experience/>\n          </TabPane>\n          <TabPane tabId=\"2\">\n            <Education/>\n          </TabPane>\n          {/* <TabPane tabId=\"3\">\n            <PersonalProjects/>\n          </TabPane>\n          <TabPane tabId=\"4\">\n            <LanguagesAndTechnologies/>\n          </TabPane> */}\n        </TabContent>\n      </Container>\n    </div>;\n  }\n}\n\nexport default Profile;\n","import React from 'react';\nimport {Container} from 'reactstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faLinkedin, faGithub, faTwitter, faTwitterSquare } from '@fortawesome/free-brands-svg-icons'\n\nclass Footer extends React.Component {\n  render() {\n    return (\n      <footer>\n        <hr/>\n        <Container>\n          <a href=\"https://twitter.com/eryous_ye\"><FontAwesomeIcon icon={faTwitter} /></a>\n          <a href=\"https://www.linkedin.com/in/youssef-errami-709266139/\"><FontAwesomeIcon icon={faLinkedin} /></a>\n          <a href=\"https://github.com/eryous\"><FontAwesomeIcon icon={faGithub}  /></a>\n        </Container>\n      </footer>\n    )\n  }\n}\n\nexport default Footer;\n","import React, { Component } from 'react';\nimport './App.css';\nimport NavBar from './components/NavBar';\nimport Profile from './components/Profile';\nimport Footer from './components/Footer';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        {/* <NavBar /> */}\n        <Profile />\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}